# Algorithmique_et_Programmation
 

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df =pd.read_csv((r'/Users/findlayross/Documents/eivp/informatique/post-32566-EIVP_KM.csv'),sep=';')
print(df)

##Evolution variable en fonction du temps

def sep():
    A,B,C=[],[],[]
    for i in range (len(df)):
        if df.id[i]==1:
            A.append(df.temp[i])
            B.append(df.sent_at[i])
            C.append(df.noise[i])
    return A,B,C    
    
def inter(deb,fin):
""" fonction raccourcie la liste pour que le temps se trouve entre le d√©but et la fin"""
    T,X=[],[]
    A=sep()[0]
    B=sep()[1]
        for i in range (len(B)):
            if deb<=B[i]<=fin:
                T.append(B[i])
                X.append(A[i])
    return T,X

b=np.array(inter('2019-08-11 11:17:21 +02:00','2019-08-13 01:17:21 +02:00')[0])
a=np.array(inter('2019-08-11 11:17:21 +02:00','2019-08-13 01:17:21 +02:00')[1])
plt.plot(b,a)

plt.show()


##afficher valeurs statistiques sur courbe
#Max
def maximum(l):
    max=l[0]
    for i in range (len(l)):
        if l[i] >= max:
            max=l[i]
    return max

#Min
def minimum(l):
    min=l[0]
    for i in range (len(l)):
        if l[i] <= min:
            min=l[i]
    return min
    
#Moyennne
def moyenne(l):
    moyen=0
    n=len(l)
    for x in l:
         moyen+=x
    moyen=moyen/n
return moyen

#Mediane
def mediane(l):
    l=quickSort(l)
    mediane=0
    n=len(l)
         if n%2==0:
            a=l[n//2]
            b=l[(n//2)+1]
            mediane=moyenne((a,b))
         else:
            mediane=l[n//2]
return mediane
        
#Variance
def variance(l):        
    LL=[]
    var=0
    moyen=moyenne(l)
    for x in l:
        LL.append(x**2)
    moyen_carree=moyenne(LL)
    var=moyen_carree-moyen
    return var
    
#Ecart-type
def ecart_type(l):
    var=variance(l)
    return var**(1/2)
